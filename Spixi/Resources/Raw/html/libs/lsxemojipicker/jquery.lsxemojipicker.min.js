/*!
 * LsxEmojiPicker
 * A simple and lightweight emoji picker plugin for jQuery
 * (c) 2018 Lascaux s.r.l.
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("jquery.lsxemojipicker", [], factory);
	else if(typeof exports === 'object')
		exports["jquery.lsxemojipicker"] = factory();
	else
		root["jquery.lsxemojipicker"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
module.exports = __webpack_require__(6);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(2);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(4)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../node_modules/css-loader/index.js!./jquery.lsxemojipicker.css", function() {
			var newContent = require("!!../node_modules/css-loader/index.js!./jquery.lsxemojipicker.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".lsx-emojipicker-emoji span {\r\n    display: inline-block;\r\n    font-size: 24px;\r\n    width: 33px;\r\n    height: 35px;\r\n    cursor: pointer;\r\n}\r\n.lsx-emojipicker-appender {\r\n    position: relative;\r\n}\r\n.lsx-emojipicker-container {\r\n    background: #ffffff;\r\n    border-radius: 5px;\r\n    z-index: 99999999999;\r\n    position: absolute;\r\n    top: -270px;\r\n    right: -20px;\r\n    box-shadow: 0 12px 29px rgba(0,0,0,.2);\r\n    transition: all 0.5s ease-in-out;\r\n    -webkit-transition: all 0.5s ease-in-out;\r\n    display: none;\r\n}\r\nul.lsx-emojipicker-tabs {\r\n    margin: 0;\r\n    padding: 0 10px;\r\n    list-style: none;\r\n    text-align: left;\r\n    background-color: #eee;\r\n    border-bottom-left-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    border-top: 1px solid #ddd;\r\n}\r\nul.lsx-emojipicker-tabs li {\r\n    display: inline-block;\r\n    text-align: left;\r\n    font-size: 15px;\r\n    padding: 6px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n}\r\nul.lsx-emojipicker-tabs li.selected,\r\nul.lsx-emojipicker-tabs li:HOVER {\r\n    opacity: 1;\r\n}\r\n.lsx-emojipicker-tabs img.emoji {\r\n    width: 22px;\r\n    margin: 5px 10px;\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n}\r\n.lsx-emojipicker-tabs img.emoji:HOVER,\r\n.lsx-emojipicker-tabs li.selected img.emoji {\r\n    opacity: 1;\r\n}\r\n.lsx-emojipicker-emoji span img.emoji {\r\n    width: 25px;\r\n    margin: 5px 4px;\r\n    cursor: pointer;\r\n    transition: all 0.1s ease-in-out;\r\n    -webkit-transition: all 0.1s ease-in-out;\r\n}\r\n.lsx-emojipicker-emoji.lsx-emoji-tab {\r\n    width: 220px;\r\n    padding: 8px;\r\n    height: 200px;\r\n    border-radius: 4px;\r\n    overflow: auto;\r\n}\r\n.lsx-emojipicker-emoji span:HOVER,\r\n.lsx-emojipicker-emoji span img.emoji:HOVER {\r\n    transform: scale(1.1);\r\n    -webkit-transform: scale(1.1);\r\n    -ms-transform: scale(1.1);\r\n}\r\nul.lsx-emojipicker-tabs li.selected {\r\n    border-bottom: 2px solid #b5b5b5;\r\n}\r\n.lsx-emojipicker-container .loader {\r\n    border: 6px solid #ececec;\r\n    border-top: 6px solid #d8d8d8;\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    animation: spin 1.2s linear infinite;\r\n    margin: 0 auto;\r\n}\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n.lsx-emojipicker-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n}\r\n.lsx-emojipicker-wrapper .spinner-container {\r\n    position: absolute;\r\n    background: #ffffffbd;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 10;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.lsx-emojipicker-container:after {\r\n    position: absolute;\r\n    display: block;\r\n    content: '';\r\n    clear: both;\r\n    top: 100%;\r\n    right: 35px;\r\n    margin-bottom: -15px;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 15px 15px 0 15px;\r\n    border-color: #eeeeee transparent transparent transparent;\r\n}\r\n.lsx-emojipicker-emoji.lsx-emoji-tab.hidden {\r\n    display: none;\r\n}", ""]);

// exports


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(5);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 5 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {


if(typeof jQuery !== 'undefined'){
    (function ($, win) {
        'use strict';
    
        var emoji = {
            'people': [
                {'name': 'smile', 'value': '&#x1f604'},
                {'name': 'smiley', 'value': '&#x1f603'},
                {'name': 'grinning', 'value': '&#x1f600'},
                {'name': 'blush', 'value': '&#x1f60a'},
                {'name': 'wink', 'value': '&#x1f609'},
                {'name': 'heart-eyes', 'value': '&#x1f60d'},
                {'name': 'kissing-heart', 'value': '&#x1f618'},
                {'name': 'kissing-closed-eyes', 'value': '&#x1f61a'},
                {'name': 'kissing', 'value': '&#x1f617'},
                {'name': 'kissing-smiling-eyes', 'value': '&#x1f619'},
                {'name': 'stuck-out-tongue-winking-eye', 'value': '&#x1f61c'},
                {'name': 'stuck-out-tongue-closed-eyes', 'value': '&#x1f61d'},
                {'name': 'stuck-out-tongue', 'value': '&#x1f61b'},
                {'name': 'flushed', 'value': '&#x1f633'},
                {'name': 'grin', 'value': '&#x1f601'},
                {'name': 'pensive', 'value': '&#x1f614'},
                {'name': 'satisfied', 'value': '&#x1f60c'},
                {'name': 'unamused', 'value': '&#x1f612'},
                {'name': 'disappointed', 'value': '&#x1f61e'},
                {'name': 'persevere', 'value': '&#x1f623'},
                {'name': 'cry', 'value': '&#x1f622'},
                {'name': 'joy', 'value': '&#x1f602'},
                {'name': 'sob', 'value': '&#x1f62d'},
                {'name': 'sleepy', 'value': '&#x1f62a'},
                {'name': 'relieved', 'value': '&#x1f625'},
                {'name': 'cold-sweat', 'value': '&#x1f630'},
                {'name': 'sweat-smile', 'value': '&#x1f605'},
                {'name': 'sweat', 'value': '&#x1f613'},
                {'name': 'weary', 'value': '&#x1f629'},
                {'name': 'tired-face', 'value': '&#x1f62b'},
                {'name': 'fearful', 'value': '&#x1f628'},
                {'name': 'scream', 'value': '&#x1f631'},
                {'name': 'angry', 'value': '&#x1f620'},
                {'name': 'rage', 'value': '&#x1f621'},
                {'name': 'triumph', 'value': '&#x1f624'},
                {'name': 'confounded', 'value': '&#x1f616'},
                {'name': 'laughing', 'value': '&#x1f606'},
                {'name': 'yum', 'value': '&#x1f60b'},
                {'name': 'mask', 'value': '&#x1f637'},
                {'name': 'sunglasses', 'value': '&#x1f60e'},
                {'name': 'sleeping', 'value': '&#x1f634'},
                {'name': 'dizzy-face', 'value': '&#x1f635'},
                {'name': 'astonished', 'value': '&#x1f632'},
                {'name': 'worried', 'value': '&#x1f61f'},
                {'name': 'frowning', 'value': '&#x1f626'},
                {'name': 'anguished', 'value': '&#x1f627'},
                {'name': 'smiling-imp', 'value': '&#x1f608'},
                {'name': 'imp', 'value': '&#x1f47f'},
                {'name': 'open-mouth', 'value': '&#x1f62e'},
                {'name': 'grimacing', 'value': '&#x1f62c'},
                {'name': 'neutral-face', 'value': '&#x1f610'},
                {'name': 'confused', 'value': '&#x1f615'},
                {'name': 'hushed', 'value': '&#x1f62f'},
                {'name': 'no-mouth', 'value': '&#x1f636'},
                {'name': 'innocent', 'value': '&#x1f607'},
                {'name': 'smirk', 'value': '&#x1f60f'},
                {'name': 'expressionless', 'value': '&#x1f611'},
                {'name': 'man-with-gua-pi-mao', 'value': '&#x1f472'},
                {'name': 'man-with-turban', 'value': '&#x1f473'},
                {'name': 'cop', 'value': '&#x1f46e'},
                {'name': 'construction-worker', 'value': '&#x1f477'},
                {'name': 'guardsman', 'value': '&#x1f482'},
                {'name': 'baby', 'value': '&#x1f476'},
                {'name': 'boy', 'value': '&#x1f466'},
                {'name': 'girl', 'value': '&#x1f467'},
                {'name': 'man', 'value': '&#x1f468'},
                {'name': 'woman', 'value': '&#x1f469'},
                {'name': 'older-man', 'value': '&#x1f474'},
                {'name': 'older-woman', 'value': '&#x1f475'},
                {'name': 'person-with-blond-hair', 'value': '&#x1f471'},
                {'name': 'angel', 'value': '&#x1f47c'},
                {'name': 'princess', 'value': '&#x1f478'},
                {'name': 'smiley-cat', 'value': '&#x1f63a'},
                {'name': 'smile-cat', 'value': '&#x1f638'},
                {'name': 'heart-eyes-cat', 'value': '&#x1f63b'},
                {'name': 'kissing-cat', 'value': '&#x1f63d'},
                {'name': 'smirk-cat', 'value': '&#x1f63c'},
                {'name': 'scream-cat', 'value': '&#x1f640'},
                {'name': 'crying-cat-face', 'value': '&#x1f63f'},
                {'name': 'joy-cat', 'value': '&#x1f639'},
                {'name': 'pouting-cat', 'value': '&#x1f63e'},
                {'name': 'japanese-ogre', 'value': '&#x1f479'},
                {'name': 'japanese-goblin', 'value': '&#x1f47a'},
                {'name': 'see-no-evil', 'value': '&#x1f648'},
                {'name': 'hear-no-evil', 'value': '&#x1f649'},
                {'name': 'speak-no-evil', 'value': '&#x1f64a'},
                {'name': 'skull', 'value': '&#x1f480'},
                {'name': 'alien', 'value': '&#x1f47d'},
                {'name': 'poop', 'value': '&#x1f4a9'},
                {'name': 'fire', 'value': '&#x1f525'},
                {'name': 'sparkles', 'value': '&#x2728'},
                {'name': 'star2', 'value': '&#x1f31f'},
                {'name': 'dizzy', 'value': '&#x1f4ab'},
                {'name': 'boom', 'value': '&#x1f4a5'},
                {'name': 'anger', 'value': '&#x1f4a2'},
                {'name': 'sweat-drops', 'value': '&#x1f4a6'},
                {'name': 'droplet', 'value': '&#x1f4a7'},
                {'name': 'zzz', 'value': '&#x1f4a4'},
                {'name': 'dash', 'value': '&#x1f4a8'},
                {'name': 'ear', 'value': '&#x1f442'},
                {'name': 'eyes', 'value': '&#x1f440'},
                {'name': 'nose', 'value': '&#x1f443'},
                {'name': 'tongue', 'value': '&#x1f445'},
                {'name': 'lips', 'value': '&#x1f444'},
                {'name': 'thumbsup', 'value': '&#x1f44d'},
                {'name': 'thumbsdown', 'value': '&#x1f44e'},
                {'name': 'ok-hand', 'value': '&#x1f44c'},
                {'name': 'punch', 'value': '&#x1f44a'},
                {'name': 'fist', 'value': '&#x270a'},
                {'name': 'v', 'value': '&#x270c'},
                {'name': 'wave', 'value': '&#x1f44b'},
                {'name': 'hand', 'value': '&#x270b'},
                {'name': 'open-hands', 'value': '&#x1f450'},
                {'name': 'point-up-2', 'value': '&#x1f446'},
                {'name': 'point-down', 'value': '&#x1f447'},
                {'name': 'point-right', 'value': '&#x1f449'},
                {'name': 'point-left', 'value': '&#x1f448'},
                {'name': 'raised-hands', 'value': '&#x1f64c'},
                {'name': 'pray', 'value': '&#x1f64f'},
                {'name': 'point-up', 'value': '&#x261d'},
                {'name': 'clap', 'value': '&#x1f44f'},
                {'name': 'muscle', 'value': '&#x1f4aa'},
                {'name': 'walking', 'value': '&#x1f6b6'},
                {'name': 'runner', 'value': '&#x1f3c3'},
                {'name': 'dancer', 'value': '&#x1f483'},
                {'name': 'couple', 'value': '&#x1f46b'},
                {'name': 'family', 'value': '&#x1f46a'},
                {'name': 'two-men-holding-hands', 'value': '&#x1f46c'},
                {'name': 'two-women-holding-hands', 'value': '&#x1f46d'},
                {'name': 'couplekiss', 'value': '&#x1f48f'},
                {'name': 'couple-with-heart', 'value': '&#x1f491'},
                {'name': 'dancers', 'value': '&#x1f46f'},
                {'name': 'ok-woman', 'value': '&#x1f646'},
                {'name': 'no-good', 'value': '&#x1f645'},
                {'name': 'information-desk-person', 'value': '&#x1f481'},
                {'name': 'raised-hand', 'value': '&#x1f64b'},
                {'name': 'massage', 'value': '&#x1f486'},
                {'name': 'haircut', 'value': '&#x1f487'},
                {'name': 'nail-care', 'value': '&#x1f485'},
                {'name': 'bride-with-veil', 'value': '&#x1f470'},
                {'name': 'person-with-pouting-face', 'value': '&#x1f64e'},
                {'name': 'person-frowning', 'value': '&#x1f64d'},
                {'name': 'bow', 'value': '&#x1f647'},
                {'name': 'tophat', 'value': '&#x1f3a9'},
                {'name': 'crown', 'value': '&#x1f451'},
                {'name': 'womans-hat', 'value': '&#x1f452'},
                {'name': 'athletic-shoe', 'value': '&#x1f45f'},
                {'name': 'mans-shoe', 'value': '&#x1f45e'},
                {'name': 'sandal', 'value': '&#x1f461'},
                {'name': 'high-heel', 'value': '&#x1f460'},
                {'name': 'boot', 'value': '&#x1f462'},
                {'name': 'shirt', 'value': '&#x1f455'},
                {'name': 'necktie', 'value': '&#x1f454'},
                {'name': 'womans-clothes', 'value': '&#x1f45a'},
                {'name': 'dress', 'value': '&#x1f457'},
                {'name': 'running-shirt-with-sash', 'value': '&#x1f3bd'},
                {'name': 'jeans', 'value': '&#x1f456'},
                {'name': 'kimono', 'value': '&#x1f458'},
                {'name': 'bikini', 'value': '&#x1f459'},
                {'name': 'briefcase', 'value': '&#x1f4bc'},
                {'name': 'handbag', 'value': '&#x1f45c'},
                {'name': 'pouch', 'value': '&#x1f45d'},
                {'name': 'purse', 'value': '&#x1f45b'},
                {'name': 'eyeglasses', 'value': '&#x1f453'},
                {'name': 'ribbon', 'value': '&#x1f380'},
                {'name': 'closed-umbrella', 'value': '&#x1f302'},
                {'name': 'lipstick', 'value': '&#x1f484'},
                {'name': 'yellow-heart', 'value': '&#x1f49b'},
                {'name': 'blue-heart', 'value': '&#x1f499'},
                {'name': 'purple-heart', 'value': '&#x1f49c'},
                {'name': 'green-heart', 'value': '&#x1f49a'},
                {'name': 'heart', 'value': '&#x2764'},
                {'name': 'broken-heart', 'value': '&#x1f494'},
                {'name': 'heartpulse', 'value': '&#x1f497'},
                {'name': 'heartbeat', 'value': '&#x1f493'},
                {'name': 'two-hearts', 'value': '&#x1f495'},
                {'name': 'sparkling-heart', 'value': '&#x1f496'},
                {'name': 'revolving-hearts', 'value': '&#x1f49e'},
                {'name': 'love-letter', 'value': '&#x1f48c'},
                {'name': 'cupid', 'value': '&#x1f498'},
                {'name': 'kiss', 'value': '&#x1f48b'},
                {'name': 'ring', 'value': '&#x1f48d'},
                {'name': 'gem', 'value': '&#x1f48e'},
                {'name': 'bust-in-silhouette', 'value': '&#x1f464'},
                {'name': 'busts-in-silhouette', 'value': '&#x1f465'},
                {'name': 'speech-balloon', 'value': '&#x1f4ac'},
                {'name': 'feet', 'value': '&#x1f463'},
                {'name': 'thought-balloon', 'value': '&#x1f4ad'}
            ],
            'nature': [
                {'name': 'dog', 'value': '&#x1f436'},
                {'name': 'wolf', 'value': '&#x1f43a'},
                {'name': 'cat', 'value': '&#x1f431'},
                {'name': 'mouse', 'value': '&#x1f42d'},
                {'name': 'hamster', 'value': '&#x1f439'},
                {'name': 'rabbit', 'value': '&#x1f430'},
                {'name': 'frog', 'value': '&#x1f438'},
                {'name': 'tiger', 'value': '&#x1f42f'},
                {'name': 'koala', 'value': '&#x1f428'},
                {'name': 'bear', 'value': '&#x1f43b'},
                {'name': 'pig', 'value': '&#x1f437'},
                {'name': 'pig-nose', 'value': '&#x1f43d'},
                {'name': 'cow', 'value': '&#x1f42e'},
                {'name': 'boar', 'value': '&#x1f417'},
                {'name': 'monkey-face', 'value': '&#x1f435'},
                {'name': 'monkey', 'value': '&#x1f412'},
                {'name': 'horse', 'value': '&#x1f434'},
                {'name': 'sheep', 'value': '&#x1f411'},
                {'name': 'elephant', 'value': '&#x1f418'},
                {'name': 'panda-face', 'value': '&#x1f43c'},
                {'name': 'penguin', 'value': '&#x1f427'},
                {'name': 'bird', 'value': '&#x1f426'},
                {'name': 'baby-chick', 'value': '&#x1f424'},
                {'name': 'hatched-chick', 'value': '&#x1f425'},
                {'name': 'hatching-chick', 'value': '&#x1f423'},
                {'name': 'chicken', 'value': '&#x1f414'},
                {'name': 'snake', 'value': '&#x1f40d'},
                {'name': 'turtle', 'value': '&#x1f422'},
                {'name': 'bug', 'value': '&#x1f41b'},
                {'name': 'honeybee', 'value': '&#x1f41d'},
                {'name': 'ant', 'value': '&#x1f41c'},
                {'name': 'beetle', 'value': '&#x1f41e'},
                {'name': 'snail', 'value': '&#x1f40c'},
                {'name': 'octopus', 'value': '&#x1f419'},
                {'name': 'shell', 'value': '&#x1f41a'},
                {'name': 'tropical-fish', 'value': '&#x1f420'},
                {'name': 'fish', 'value': '&#x1f41f'},
                {'name': 'dolphin', 'value': '&#x1f42c'},
                {'name': 'whale', 'value': '&#x1f433'},
                {'name': 'whale2', 'value': '&#x1f40b'},
                {'name': 'cow2', 'value': '&#x1f404'},
                {'name': 'ram', 'value': '&#x1f40f'},
                {'name': 'rat', 'value': '&#x1f400'},
                {'name': 'water-buffalo', 'value': '&#x1f403'},
                {'name': 'tiger2', 'value': '&#x1f405'},
                {'name': 'rabbit2', 'value': '&#x1f407'},
                {'name': 'dragon', 'value': '&#x1f409'},
                {'name': 'racehorse', 'value': '&#x1f40e'},
                {'name': 'goat', 'value': '&#x1f410'},
                {'name': 'rooster', 'value': '&#x1f413'},
                {'name': 'dog2', 'value': '&#x1f415'},
                {'name': 'pig2', 'value': '&#x1f416'},
                {'name': 'mouse2', 'value': '&#x1f401'},
                {'name': 'ox', 'value': '&#x1f402'},
                {'name': 'dragon-face', 'value': '&#x1f432'},
                {'name': 'blowfish', 'value': '&#x1f421'},
                {'name': 'crocodile', 'value': '&#x1f40a'},
                {'name': 'camel', 'value': '&#x1f42b'},
                {'name': 'dromedary-camel', 'value': '&#x1f42a'},
                {'name': 'leopard', 'value': '&#x1f406'},
                {'name': 'cat2', 'value': '&#x1f408'},
                {'name': 'poodle', 'value': '&#x1f429'},
                {'name': 'paw-prints', 'value': '&#x1f43e'},
                {'name': 'bouquet', 'value': '&#x1f490'},
                {'name': 'cherry-blossom', 'value': '&#x1f338'},
                {'name': 'tulip', 'value': '&#x1f337'},
                {'name': 'four-leaf-clover', 'value': '&#x1f340'},
                {'name': 'rose', 'value': '&#x1f339'},
                {'name': 'sunflower', 'value': '&#x1f33b'},
                {'name': 'hibiscus', 'value': '&#x1f33a'},
                {'name': 'maple-leaf', 'value': '&#x1f341'},
                {'name': 'leaves', 'value': '&#x1f343'},
                {'name': 'fallen-leaf', 'value': '&#x1f342'},
                {'name': 'herb', 'value': '&#x1f33f'},
                {'name': 'ear-of-rice', 'value': '&#x1f33e'},
                {'name': 'mushroom', 'value': '&#x1f344'},
                {'name': 'cactus', 'value': '&#x1f335'},
                {'name': 'palm-tree', 'value': '&#x1f334'},
                {'name': 'evergreen-tree', 'value': '&#x1f332'},
                {'name': 'deciduous-tree', 'value': '&#x1f333'},
                {'name': 'chestnut', 'value': '&#x1f330'},
                {'name': 'seedling', 'value': '&#x1f331'},
                {'name': 'blossom', 'value': '&#x1f33c'},
                {'name': 'globe-with-meridians', 'value': '&#x1f310'},
                {'name': 'sun-with-face', 'value': '&#x1f31e'},
                {'name': 'full-moon-with-face', 'value': '&#x1f31d'},
                {'name': 'new-moon-with-face', 'value': '&#x1f31a'},
                {'name': 'new-moon', 'value': '&#x1f311'},
                {'name': 'waxing-crescent-moon', 'value': '&#x1f312'},
                {'name': 'first-quarter-moon', 'value': '&#x1f313'},
                {'name': 'waxing-gibbous-moon', 'value': '&#x1f314'},
                {'name': 'full-moon', 'value': '&#x1f315'},
                {'name': 'waning-gibbous-moon', 'value': '&#x1f316'},
                {'name': 'last-quarter-moon', 'value': '&#x1f317'},
                {'name': 'waning-crescent-moon', 'value': '&#x1f318'},
                {'name': 'last-quarter-moon-with-face', 'value': '&#x1f31c'},
                {'name': 'first-quarter-moon-with-face', 'value': '&#x1f31b'},
                {'name': 'moon', 'value': '&#x1f319'},
                {'name': 'earth-africa', 'value': '&#x1f30d'},
                {'name': 'earth-americas', 'value': '&#x1f30e'},
                {'name': 'earth-asia', 'value': '&#x1f30f'},
                {'name': 'volcano', 'value': '&#x1f30b'},
                {'name': 'milky-way', 'value': '&#x1f30c'},
                {'name': 'shooting-star', 'value': '&#x1f320'},
                {'name': 'star', 'value': '&#x2b50'},
                {'name': 'sunny', 'value': '&#x2600'},
                {'name': 'partly-sunny', 'value': '&#x26c5'},
                {'name': 'cloud', 'value': '&#x2601'},
                {'name': 'zap', 'value': '&#x26a1'},
                {'name': 'umbrella', 'value': '&#x2614'},
                {'name': 'snowflake', 'value': '&#x2744'},
                {'name': 'snowman', 'value': '&#x26c4'},
                {'name': 'cyclone', 'value': '&#x1f300'},
                {'name': 'foggy', 'value': '&#x1f301'},
                {'name': 'rainbow', 'value': '&#x1f308'},
                {'name': 'ocean', 'value': '&#x1f30a'}
            ],
            'object': [
                {'name': 'bamboo', 'value': '&#x1f38d'},
                {'name': 'gift-heart', 'value': '&#x1f49d'},
                {'name': 'dolls', 'value': '&#x1f38e'},
                {'name': 'school-satchel', 'value': '&#x1f392'},
                {'name': 'mortar-board', 'value': '&#x1f393'},
                {'name': 'flags', 'value': '&#x1f38f'},
                {'name': 'fireworks', 'value': '&#x1f386'},
                {'name': 'sparkler', 'value': '&#x1f387'},
                {'name': 'wind-chime', 'value': '&#x1f390'},
                {'name': 'rice-scene', 'value': '&#x1f391'},
                {'name': 'jack-o-lantern', 'value': '&#x1f383'},
                {'name': 'ghost', 'value': '&#x1f47b'},
                {'name': 'santa', 'value': '&#x1f385'},
                {'name': 'christmas-tree', 'value': '&#x1f384'},
                {'name': 'gift', 'value': '&#x1f381'},
                {'name': 'tanabata-tree', 'value': '&#x1f38b'},
                {'name': 'tada', 'value': '&#x1f389'},
                {'name': 'confetti-ball', 'value': '&#x1f38a'},
                {'name': 'balloon', 'value': '&#x1f388'},
                {'name': 'crossed-flags', 'value': '&#x1f38c'},
                {'name': 'crystal-ball', 'value': '&#x1f52e'},
                {'name': 'movie-camera', 'value': '&#x1f3a5'},
                {'name': 'camera', 'value': '&#x1f4f7'},
                {'name': 'video-camera', 'value': '&#x1f4f9'},
                {'name': 'vhs', 'value': '&#x1f4fc'},
                {'name': 'cd', 'value': '&#x1f4bf'},
                {'name': 'dvd', 'value': '&#x1f4c0'},
                {'name': 'minidisc', 'value': '&#x1f4bd'},
                {'name': 'floppy-disk', 'value': '&#x1f4be'},
                {'name': 'computer', 'value': '&#x1f4bb'},
                {'name': 'iphone', 'value': '&#x1f4f1'},
                {'name': 'phone', 'value': '&#x260e'},
                {'name': 'telephone-receiver', 'value': '&#x1f4de'},
                {'name': 'pager', 'value': '&#x1f4df'},
                {'name': 'fax', 'value': '&#x1f4e0'},
                {'name': 'satellite', 'value': '&#x1f4e1'},
                {'name': 'tv', 'value': '&#x1f4fa'},
                {'name': 'radio', 'value': '&#x1f4fb'},
                {'name': 'speaker-waves', 'value': '&#x1f50a'},
                {'name': 'sound', 'value': '&#x1f509'},
                {'name': 'speaker', 'value': '&#x1f508'},
                {'name': 'mute', 'value': '&#x1f507'},
                {'name': 'bell', 'value': '&#x1f514'},
                {'name': 'no-bell', 'value': '&#x1f515'},
                {'name': 'loudspeaker', 'value': '&#x1f4e2'},
                {'name': 'mega', 'value': '&#x1f4e3'},
                {'name': 'hourglass-flowing-sand', 'value': '&#x23f3'},
                {'name': 'hourglass', 'value': '&#x231b'},
                {'name': 'alarm-clock', 'value': '&#x23f0'},
                {'name': 'watch', 'value': '&#x231a'},
                {'name': 'unlock', 'value': '&#x1f513'},
                {'name': 'lock', 'value': '&#x1f512'},
                {'name': 'lock-with-ink-pen', 'value': '&#x1f50f'},
                {'name': 'closed-lock-with-key', 'value': '&#x1f510'},
                {'name': 'key', 'value': '&#x1f511'},
                {'name': 'mag-right', 'value': '&#x1f50e'},
                {'name': 'bulb', 'value': '&#x1f4a1'},
                {'name': 'flashlight', 'value': '&#x1f526'},
                {'name': 'high-brightness', 'value': '&#x1f506'},
                {'name': 'low-brightness', 'value': '&#x1f505'},
                {'name': 'electric-plug', 'value': '&#x1f50c'},
                {'name': 'battery', 'value': '&#x1f50b'},
                {'name': 'mag', 'value': '&#x1f50d'},
                {'name': 'bathtub', 'value': '&#x1f6c1'},
                {'name': 'bath', 'value': '&#x1f6c0'},
                {'name': 'shower', 'value': '&#x1f6bf'},
                {'name': 'toilet', 'value': '&#x1f6bd'},
                {'name': 'wrench', 'value': '&#x1f527'},
                {'name': 'nut-and-bolt', 'value': '&#x1f529'},
                {'name': 'hammer', 'value': '&#x1f528'},
                {'name': 'door', 'value': '&#x1f6aa'},
                {'name': 'smoking', 'value': '&#x1f6ac'},
                {'name': 'bomb', 'value': '&#x1f4a3'},
                {'name': 'gun', 'value': '&#x1f52b'},
                {'name': 'hocho', 'value': '&#x1f52a'},
                {'name': 'pill', 'value': '&#x1f48a'},
                {'name': 'syringe', 'value': '&#x1f489'},
                {'name': 'moneybag', 'value': '&#x1f4b0'},
                {'name': 'yen', 'value': '&#x1f4b4'},
                {'name': 'dollar', 'value': '&#x1f4b5'},
                {'name': 'pound', 'value': '&#x1f4b7'},
                {'name': 'euro', 'value': '&#x1f4b6'},
                {'name': 'credit-card', 'value': '&#x1f4b3'},
                {'name': 'money-with-wings', 'value': '&#x1f4b8'},
                {'name': 'calling', 'value': '&#x1f4f2'},
                {'name': 'e-mail', 'value': '&#x1f4e7'},
                {'name': 'inbox-tray', 'value': '&#x1f4e5'},
                {'name': 'outbox-tray', 'value': '&#x1f4e4'},
                {'name': 'email', 'value': '&#x2709'},
                {'name': 'enveloppe', 'value': '&#x1f4e9'},
                {'name': 'incoming-envelope', 'value': '&#x1f4e8'},
                {'name': 'postal-horn', 'value': '&#x1f4ef'},
                {'name': 'mailbox', 'value': '&#x1f4eb'},
                {'name': 'mailbox-closed', 'value': '&#x1f4ea'},
                {'name': 'mailbox-with-mail', 'value': '&#x1f4ec'},
                {'name': 'mailbox-with-no-mail', 'value': '&#x1f4ed'},
                {'name': 'postbox', 'value': '&#x1f4ee'},
                {'name': 'package', 'value': '&#x1f4e6'},
                {'name': 'memo', 'value': '&#x1f4dd'},
                {'name': 'page-facing-up', 'value': '&#x1f4c4'},
                {'name': 'page-with-curl', 'value': '&#x1f4c3'},
                {'name': 'bookmark-tabs', 'value': '&#x1f4d1'},
                {'name': 'bar-chart', 'value': '&#x1f4ca'},
                {'name': 'chart-with-upwards-trend', 'value': '&#x1f4c8'},
                {'name': 'chart-with-downwards-trend', 'value': '&#x1f4c9'},
                {'name': 'scroll', 'value': '&#x1f4dc'},
                {'name': 'clipboard', 'value': '&#x1f4cb'},
                {'name': 'date', 'value': '&#x1f4c5'},
                {'name': 'calendar', 'value': '&#x1f4c6'},
                {'name': 'card-index', 'value': '&#x1f4c7'},
                {'name': 'file-folder', 'value': '&#x1f4c1'},
                {'name': 'open-file-folder', 'value': '&#x1f4c2'},
                {'name': 'scissors', 'value': '&#x2702'},
                {'name': 'pushpin', 'value': '&#x1f4cc'},
                {'name': 'paperclip', 'value': '&#x1f4ce'},
                {'name': 'black-nib', 'value': '&#x2712'},
                {'name': 'pencil2', 'value': '&#x270f'},
                {'name': 'straight-ruler', 'value': '&#x1f4cf'},
                {'name': 'triangular-ruler', 'value': '&#x1f4d0'},
                {'name': 'closed-book', 'value': '&#x1f4d5'},
                {'name': 'green-book', 'value': '&#x1f4d7'},
                {'name': 'blue-book', 'value': '&#x1f4d8'},
                {'name': 'orange-book', 'value': '&#x1f4d9'},
                {'name': 'notebook', 'value': '&#x1f4d3'},
                {'name': 'notebook-with-decorative-cover', 'value': '&#x1f4d4'},
                {'name': 'ledger', 'value': '&#x1f4d2'},
                {'name': 'books', 'value': '&#x1f4da'},
                {'name': 'open-book', 'value': '&#x1f4d6'},
                {'name': 'bookmark', 'value': '&#x1f516'},
                {'name': 'name-badge', 'value': '&#x1f4db'},
                {'name': 'microscope', 'value': '&#x1f52c'},
                {'name': 'telescope', 'value': '&#x1f52d'},
                {'name': 'newspaper', 'value': '&#x1f4f0'},
                {'name': 'art', 'value': '&#x1f3a8'},
                {'name': 'clapper', 'value': '&#x1f3ac'},
                {'name': 'microphone', 'value': '&#x1f3a4'},
                {'name': 'headphones', 'value': '&#x1f3a7'},
                {'name': 'musical-score', 'value': '&#x1f3bc'},
                {'name': 'musical-note', 'value': '&#x1f3b5'},
                {'name': 'notes', 'value': '&#x1f3b6'},
                {'name': 'musical-keyboard', 'value': '&#x1f3b9'},
                {'name': 'violin', 'value': '&#x1f3bb'},
                {'name': 'trumpet', 'value': '&#x1f3ba'},
                {'name': 'saxophone', 'value': '&#x1f3b7'},
                {'name': 'guitar', 'value': '&#x1f3b8'},
                {'name': 'space-invader', 'value': '&#x1f47e'},
                {'name': 'video-game', 'value': '&#x1f3ae'},
                {'name': 'black-joker', 'value': '&#x1f0cf'},
                {'name': 'flower-playing-cards', 'value': '&#x1f3b4'},
                {'name': 'mahjong', 'value': '&#x1f004'},
                {'name': 'game-die', 'value': '&#x1f3b2'},
                {'name': 'dart', 'value': '&#x1f3af'},
                {'name': 'football', 'value': '&#x1f3c8'},
                {'name': 'basketball', 'value': '&#x1f3c0'},
                {'name': 'soccer', 'value': '&#x26bd'},
                {'name': 'baseball', 'value': '&#x26be'},
                {'name': 'tennis', 'value': '&#x1f3be'},
                {'name': '8ball', 'value': '&#x1f3b1'},
                {'name': 'rugby-football', 'value': '&#x1f3c9'},
                {'name': 'bowling', 'value': '&#x1f3b3'},
                {'name': 'golf', 'value': '&#x26f3'},
                {'name': 'mountain-bicyclist', 'value': '&#x1f6b5'},
                {'name': 'bicyclist', 'value': '&#x1f6b4'},
                {'name': 'checkered-flag', 'value': '&#x1f3c1'},
                {'name': 'horse-racing', 'value': '&#x1f3c7'},
                {'name': 'trophy', 'value': '&#x1f3c6'},
                {'name': 'ski', 'value': '&#x1f3bf'},
                {'name': 'snowboarder', 'value': '&#x1f3c2'},
                {'name': 'swimmer', 'value': '&#x1f3ca'},
                {'name': 'surfer', 'value': '&#x1f3c4'},
                {'name': 'fishing-pole-and-fish', 'value': '&#x1f3a3'},
                {'name': 'coffee', 'value': '&#x2615'},
                {'name': 'tea', 'value': '&#x1f375'},
                {'name': 'sake', 'value': '&#x1f376'},
                {'name': 'baby-bottle', 'value': '&#x1f37c'},
                {'name': 'beer', 'value': '&#x1f37a'},
                {'name': 'beers', 'value': '&#x1f37b'},
                {'name': 'cocktail', 'value': '&#x1f378'},
                {'name': 'tropical-drink', 'value': '&#x1f379'},
                {'name': 'wine-glass', 'value': '&#x1f377'},
                {'name': 'fork-and-knife', 'value': '&#x1f374'},
                {'name': 'pizza', 'value': '&#x1f355'},
                {'name': 'hamburger', 'value': '&#x1f354'},
                {'name': 'fries', 'value': '&#x1f35f'},
                {'name': 'poultry-leg', 'value': '&#x1f357'},
                {'name': 'meat-on-bone', 'value': '&#x1f356'},
                {'name': 'spaghetti', 'value': '&#x1f35d'},
                {'name': 'curry', 'value': '&#x1f35b'},
                {'name': 'fried-shrimp', 'value': '&#x1f364'},
                {'name': 'bento', 'value': '&#x1f371'},
                {'name': 'sushi', 'value': '&#x1f363'},
                {'name': 'fish-cake', 'value': '&#x1f365'},
                {'name': 'rice-ball', 'value': '&#x1f359'},
                {'name': 'rice-cracker', 'value': '&#x1f358'},
                {'name': 'rice', 'value': '&#x1f35a'},
                {'name': 'ramen', 'value': '&#x1f35c'},
                {'name': 'stew', 'value': '&#x1f372'},
                {'name': 'oden', 'value': '&#x1f362'},
                {'name': 'dango', 'value': '&#x1f361'},
                {'name': 'egg', 'value': '&#x1f373'},
                {'name': 'bread', 'value': '&#x1f35e'},
                {'name': 'doughnut', 'value': '&#x1f369'},
                {'name': 'custard', 'value': '&#x1f36e'},
                {'name': 'icecream', 'value': '&#x1f366'},
                {'name': 'ice-cream', 'value': '&#x1f368'},
                {'name': 'shaved-ice', 'value': '&#x1f367'},
                {'name': 'birthday', 'value': '&#x1f382'},
                {'name': 'cake', 'value': '&#x1f370'},
                {'name': 'cookie', 'value': '&#x1f36a'},
                {'name': 'chocolate-bar', 'value': '&#x1f36b'},
                {'name': 'candy', 'value': '&#x1f36c'},
                {'name': 'lollipop', 'value': '&#x1f36d'},
                {'name': 'honey-pot', 'value': '&#x1f36f'},
                {'name': 'apple', 'value': '&#x1f34e'},
                {'name': 'green-apple', 'value': '&#x1f34f'},
                {'name': 'tangerine', 'value': '&#x1f34a'},
                {'name': 'lemon', 'value': '&#x1f34b'},
                {'name': 'cherries', 'value': '&#x1f352'},
                {'name': 'grapes', 'value': '&#x1f347'},
                {'name': 'watermelon', 'value': '&#x1f349'},
                {'name': 'strawberry', 'value': '&#x1f353'},
                {'name': 'peach', 'value': '&#x1f351'},
                {'name': 'melon', 'value': '&#x1f348'},
                {'name': 'banana', 'value': '&#x1f34c'},
                {'name': 'pear', 'value': '&#x1f350'},
                {'name': 'pineapple', 'value': '&#x1f34d'},
                {'name': 'sweet-potato', 'value': '&#x1f360'},
                {'name': 'eggplant', 'value': '&#x1f346'},
                {'name': 'tomato', 'value': '&#x1f345'},
                {'name': 'corn', 'value': '&#x1f33d'}
            ],
            'place': [
                {'name': 'house', 'value': '&#x1f3e0'},
                {'name': 'house-with-garden', 'value': '&#x1f3e1'},
                {'name': 'school', 'value': '&#x1f3eb'},
                {'name': 'office', 'value': '&#x1f3e2'},
                {'name': 'post-office', 'value': '&#x1f3e3'},
                {'name': 'hospital', 'value': '&#x1f3e5'},
                {'name': 'bank', 'value': '&#x1f3e6'},
                {'name': 'convenience-store', 'value': '&#x1f3ea'},
                {'name': 'love-hotel', 'value': '&#x1f3e9'},
                {'name': 'hotel', 'value': '&#x1f3e8'},
                {'name': 'wedding', 'value': '&#x1f492'},
                {'name': 'church', 'value': '&#x26ea'},
                {'name': 'department-store', 'value': '&#x1f3ec'},
                {'name': 'european-post-office', 'value': '&#x1f3e4'},
                {'name': 'private-use', 'value': '&#xe50a'},
                {'name': 'city-sunrise', 'value': '&#x1f307'},
                {'name': 'city-sunset', 'value': '&#x1f306'},
                {'name': 'japanese-castle', 'value': '&#x1f3ef'},
                {'name': 'european-castle', 'value': '&#x1f3f0'},
                {'name': 'tent', 'value': '&#x26fa'},
                {'name': 'factory', 'value': '&#x1f3ed'},
                {'name': 'tokyo-tower', 'value': '&#x1f5fc'},
                {'name': 'japan', 'value': '&#x1f5fe'},
                {'name': 'mount-fuji', 'value': '&#x1f5fb'},
                {'name': 'sunrise-over-mountains', 'value': '&#x1f304'},
                {'name': 'sunrise', 'value': '&#x1f305'},
                {'name': 'stars', 'value': '&#x1f303'},
                {'name': 'statue-of-liberty', 'value': '&#x1f5fd'},
                {'name': 'bridge-at-night', 'value': '&#x1f309'},
                {'name': 'carousel-horse', 'value': '&#x1f3a0'},
                {'name': 'ferris-wheel', 'value': '&#x1f3a1'},
                {'name': 'fountain', 'value': '&#x26f2'},
                {'name': 'roller-coaster', 'value': '&#x1f3a2'},
                {'name': 'ship', 'value': '&#x1f6a2'},
                {'name': 'boat', 'value': '&#x26f5'},
                {'name': 'speedboat', 'value': '&#x1f6a4'},
                {'name': 'rowboat', 'value': '&#x1f6a3'},
                {'name': 'anchor', 'value': '&#x2693'},
                {'name': 'rocket', 'value': '&#x1f680'},
                {'name': 'airplane', 'value': '&#x2708'},
                {'name': 'seat', 'value': '&#x1f4ba'},
                {'name': 'helicopter', 'value': '&#x1f681'},
                {'name': 'steam-locomotive', 'value': '&#x1f682'},
                {'name': 'tram', 'value': '&#x1f68a'},
                {'name': 'station', 'value': '&#x1f689'},
                {'name': 'mountain-railway', 'value': '&#x1f69e'},
                {'name': 'train2', 'value': '&#x1f686'},
                {'name': 'bullettrain-side', 'value': '&#x1f684'},
                {'name': 'bullettrain-front', 'value': '&#x1f685'},
                {'name': 'light-rail', 'value': '&#x1f688'},
                {'name': 'metro', 'value': '&#x1f687'},
                {'name': 'monorail', 'value': '&#x1f69d'},
                {'name': 'tram-car', 'value': '&#x1f68b'},
                {'name': 'railway-car', 'value': '&#x1f683'},
                {'name': 'trolleybus', 'value': '&#x1f68e'},
                {'name': 'bus', 'value': '&#x1f68c'},
                {'name': 'oncoming-bus', 'value': '&#x1f68d'},
                {'name': 'blue-car', 'value': '&#x1f699'},
                {'name': 'oncoming-automobile', 'value': '&#x1f698'},
                {'name': 'car', 'value': '&#x1f697'},
                {'name': 'taxi', 'value': '&#x1f695'},
                {'name': 'oncoming-taxi', 'value': '&#x1f696'},
                {'name': 'articulated-lorry', 'value': '&#x1f69b'},
                {'name': 'truck', 'value': '&#x1f69a'},
                {'name': 'rotating-light', 'value': '&#x1f6a8'},
                {'name': 'police-car', 'value': '&#x1f693'},
                {'name': 'oncoming-police-car', 'value': '&#x1f694'},
                {'name': 'fire-engine', 'value': '&#x1f692'},
                {'name': 'ambulance', 'value': '&#x1f691'},
                {'name': 'minibus', 'value': '&#x1f690'},
                {'name': 'bike', 'value': '&#x1f6b2'},
                {'name': 'aerial-tramway', 'value': '&#x1f6a1'},
                {'name': 'suspension-railway', 'value': '&#x1f69f'},
                {'name': 'mountain-cableway', 'value': '&#x1f6a0'},
                {'name': 'tractor', 'value': '&#x1f69c'},
                {'name': 'barber', 'value': '&#x1f488'},
                {'name': 'busstop', 'value': '&#x1f68f'},
                {'name': 'ticket', 'value': '&#x1f3ab'},
                {'name': 'vertical-traffic-light', 'value': '&#x1f6a6'},
                {'name': 'traffic-light', 'value': '&#x1f6a5'},
                {'name': 'warning', 'value': '&#x26a0'},
                {'name': 'construction', 'value': '&#x1f6a7'},
                {'name': 'beginner', 'value': '&#x1f530'},
                {'name': 'fuelpump', 'value': '&#x26fd'},
                {'name': 'izakaya-lantern', 'value': '&#x1f3ee'},
                {'name': 'slot-machine', 'value': '&#x1f3b0'},
                {'name': 'hotsprings', 'value': '&#x2668'},
                {'name': 'moyai', 'value': '&#x1f5ff'},
                {'name': 'circus-tent', 'value': '&#x1f3aa'},
                {'name': 'performing-arts', 'value': '&#x1f3ad'},
                {'name': 'round-pushpin', 'value': '&#x1f4cd'},
                {'name': 'triangular-flag-on-post', 'value': '&#x1f6a9'},
                {'name': 'cn', 'value': '&#x1f1e8;&#x1f1f3'},
                {'name': 'de', 'value': '&#x1f1e9;&#x1f1ea'},
                {'name': 'es', 'value': '&#x1f1ea;&#x1f1f8'},
                {'name': 'fr', 'value': '&#x1f1eb;&#x1f1f7'},
                {'name': 'gb', 'value': '&#x1f1ec;&#x1f1e7'},
                {'name': 'it', 'value': '&#x1f1ee;&#x1f1f9'},
                {'name': 'jp', 'value': '&#x1f1ef;&#x1f1f5'},
                {'name': 'kr', 'value': '&#x1f1f0;&#x1f1f7'},
                {'name': 'ru', 'value': '&#x1f1f7;&#x1f1fa'},
                {'name': 'us', 'value': '&#x1f1fa;&#x1f1f8'}
            ]
        }
    
        var settings = {};
    
        $.fn.lsxEmojiPicker = function (options) {
    
            // Overriding default options
            settings = $.extend({
                width: 220,
                height: 200,
                twemoji: false,
                closeOnSelect: true,
                onSelect: function(em){}
            }, options);
    
            var appender = $('<div></div>')
                .addClass('lsx-emojipicker-appender');
            var container = $('<div></div>')
                .addClass('lsx-emojipicker-container')
                .css({
                    'top': -(settings.height + 70)
                });
            var wrapper = $('<div></div>')
                .addClass('lsx-emojipicker-wrapper');
    
            var spinnerContainer = $('<div></div>')
                .addClass('spinner-container');
            var spinner = $('<div></div>')
                .addClass('loader');
            spinnerContainer.append(spinner);
    
            var emojiPeopleContainer = $('<div></div>')
                .addClass('lsx-emojipicker-emoji lsx-emoji-tab lsx-emoji-people')
                .css({'width': settings.width, 'height': settings.height});
            var emojiNatureContainer = $('<div></div>')
                .addClass('lsx-emojipicker-emoji lsx-emoji-tab lsx-emoji-nature hidden')
                .css({'width': settings.width, 'height': settings.height});
            var emojiPlaceContainer = $('<div></div>')
                .addClass('lsx-emojipicker-emoji lsx-emoji-tab lsx-emoji-place hidden')
                .css({'width': settings.width, 'height': settings.height});
            var emojiObjectContainer = $('<div></div>')
                .addClass('lsx-emojipicker-emoji lsx-emoji-tab lsx-emoji-object hidden')
                .css({'width': settings.width, 'height': settings.height});
    
            var tabs = $('<ul></ul>')
                .addClass('lsx-emojipicker-tabs');
        
            var peopleEmoji = $('<li></li>')
                .addClass('selected')
                .html(emoji['people'][1].value)
                .click(function(e){
                    e.preventDefault();
                    $('ul.lsx-emojipicker-tabs li').removeClass('selected');
                    $(this).addClass('selected');
                    $('.lsx-emoji-tab').addClass('hidden');
                    emojiPeopleContainer.removeClass('hidden');
                });
            var natureEmoji = $('<li></li>')
                .html(emoji['nature'][0].value)
                .click(function(e){
                    e.preventDefault();
                    $('ul.lsx-emojipicker-tabs li').removeClass('selected');
                    $(this).addClass('selected');
                    $('.lsx-emoji-tab').addClass('hidden');
                    emojiNatureContainer.removeClass('hidden');
                });
            var placeEmoji = $('<li></li>')
                .html(emoji['place'][38].value)
                .click(function(e){
                    e.preventDefault();
                    $('ul.lsx-emojipicker-tabs li').removeClass('selected');
                    $(this).addClass('selected');
                    $('.lsx-emoji-tab').addClass('hidden');
                    emojiPlaceContainer.removeClass('hidden');
                });
            var objectEmoji = $('<li></li>')
                .html(emoji['object'][4].value)
                .click(function(e){
                    e.preventDefault();
                    $('ul.lsx-emojipicker-tabs li').removeClass('selected');
                    $(this).addClass('selected');
                    $('.lsx-emoji-tab').addClass('hidden');
                    emojiObjectContainer.removeClass('hidden');
                });
    
            tabs.append(peopleEmoji)
                .append(natureEmoji)
                .append(placeEmoji)
                .append(objectEmoji);
    
            createEmojiTab('people', emojiPeopleContainer, container);
            createEmojiTab('nature', emojiNatureContainer, container);
            createEmojiTab('place', emojiPlaceContainer, container);
            createEmojiTab('object', emojiObjectContainer, container);
    
            //wrapper.append(spinnerContainer);
            wrapper.append(emojiPeopleContainer)
                   .append(emojiNatureContainer)
                   .append(emojiPlaceContainer)
                   .append(emojiObjectContainer);
            wrapper.append(tabs);
            container.append(wrapper);
            appender.append(container);
            this.append(appender);
    
            
            if(settings.twemoji){
                /*twemoji.parse(emojiPeopleContainer[0], {size: 72});
                twemoji.parse(emojiNatureContainer[0], {size: 72});
                twemoji.parse(emojiPlaceContainer[0], {size: 72});
                twemoji.parse(emojiObjectContainer[0], {size: 72});*/
                twemoji.parse(tabs[0], {size: 72});
            }
    
            this.click(function(e){
                e.preventDefault();
                if(!$(e.target).parent().hasClass('lsx-emojipicker-tabs') 
                    && !$(e.target).parent().parent().hasClass('lsx-emojipicker-tabs') 
                    && !$(e.target).parent().hasClass('lsx-emoji-tab')
                    && !$(e.target).parent().parent().hasClass('lsx-emoji-tab')){
                    if(container.is(':visible')){
                        container.hide();
                    } else {
                        container.fadeIn();
                    }
                }
                e.stopPropagation();
                return false;
            });
            
            // Apply the plugin to the selected elements
            return this;
        }
    
        function createEmojiTab(type, container, wrapper){
            for(var i = 0; i < emoji[type].length; i++){
                var selectedEmoji = emoji[type][i];
                var emoticon = $('<span></span>')
                    .data('value', selectedEmoji.value)
                    .attr('title', selectedEmoji.name);
                if(settings.twemoji)
                {
                    emoticon.html(twemoji.parse(twemoji.convert.fromCodePoint(selectedEmoji.value.replace("&#x", "0x"))));
				}else
                {
                    emoticon.html(selectedEmoji.value);
				}

                emoticon.click(function(e){
                    e.preventDefault();
                    settings.onSelect({
                        'name': $(this).attr('title'),
                        'value': $(this).data('value')
                    });
                    if(settings.closeOnSelect){
                        wrapper.hide();
                    }
                });
                container.append(emoticon);
            }
        }
    }(jQuery, window));
}


/***/ })
/******/ ]);
});
//# sourceMappingURL=jquery.lsxemojipicker.min.js.map